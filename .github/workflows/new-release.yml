name: Publish new release

on:
  release:
    types: [published]

jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
    
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.x

      - name: Restore project
        run: dotnet restore

      - name: Build package
        run: dotnet build --configuration Release --no-restore

      #TODO: - name: Test package 

      - name: Store build files
        uses: actions/upload-artifact@v3
        with:
          name: build_files
          path: ./bin
          retention-days: 1
          if-no-files-found: error

  create_nuget:
    runs-on: ubuntu-latest
    needs: [ build_test ]
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.x

      - name: Get build files
        uses: actions/download-artifact@v3
        with:
          name: build_files
          path: ./bin
      
      - name: Create package
        run: dotnet pack --configuration Release --output ./nupkg

      - name: Store nuget package
        uses: actions/upload-artifact@v3
        with:
          name: nuget_package
          path: ./nupkg/*.nupkg
          retention-days: 1
          if-no-files-found: error

  publish_package:
    runs-on: ubuntu-latest
    needs: [ create_nuget ]
    steps:

      - uses: actions/download-artifact@v3
        with:
          name: nuget_package
          path: ./nupkg

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.x
      
      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "./nupkg" -Recurse -Include *.nupkg)) {
            dotnet nuget push $file --api-key "${{ secrets.NUGET_API_KEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }      